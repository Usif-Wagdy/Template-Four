@use "./variables" as *;

// breakpoints
@mixin break_point($screen) {
  @if $screen == "mobile" {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $screen == "small" {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $screen == "medium" {
    @media (min-width: 992px) {
      @content;
    }
  } @else if $screen == "large" {
    @media (min-width: 1200px) {
      @content;
    }
  }
}

// Creates a responsive flex-box with space between
@mixin flex_box($class_name) {
  #{$class_name} {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: center;
    @include break_point("mobile") {
      flex-direction: column;
    }
    @content;
  }
}
// centering
@mixin center($class_name) {
  #{$class_name} {
    display: flex;
    justify-content: center;
    align-items: center;
    @content;
  }
}
// sets font style
@mixin font(
  $color,
  $size,
  $weight,
  $trans: null,
  $spacing: null,
  $padding_top: null,
  $padding_left: null,
  $line_height: null
) {
  color: $color;
  font-size: $size;
  font-weight: $weight;
  text-transform: $trans;
  letter-spacing: $spacing;
  line-height: $line_height;
  padding: {
    top: $padding_top;
    bottom: $padding_top;
    left: $padding_left;
    right: $padding_left;
  }
  @content;
}
// takes type of text in page then gives it it's stylings
@mixin text($type, $size: null, $color: null, $responsive: null) {
  @if $type == "logo" {
    @include font($main_color, $font_size * 1.3, bold, uppercase, 3px) {
      height: $header_height;
      @include break_point("mobile") {
        height: 50px;
      }
    }
  } @else if $type == "nav" {
    @include font(
      $text_color,
      $font_size * 0.9,
      normal,
      capitalize,
      null,
      0,
      30px
    ) {
      height: $header_height;
      @include break_point("mobile") {
        height: 40px;
        font-size: $font_size * 0.7;
        padding: 9px;
      }
    }
  } @else if $type == "section-title" {
    @include font(
      $text_color,
      $font_size * 1.5,
      bold,
      uppercase,
      null,
      10px,
      20px
    ) {
      border: 2px solid $text_color;
      width: fit-content;
      margin: 0 auto 80px;
    }
  } @else if $type == "heading" {
    @include font(
      if($color, $color, $text_color),
      $size,
      bold,
      capitalize,
      null,
      null,
      null,
      null
    ) {
      margin: 0;
      @if $color != $main_color {
        margin-bottom: $text_gap;
      }
      @include break_point("mobile") {
        font-size: if($responsive, $size * 0.7, null);
      }
    }
  } @else if $type == "normal" {
    @include font(
      if($color, $color, $p_color),
      $size,
      normal,
      null,
      null,
      null,
      null,
      1.5
    ) {
      margin: 0;
      @include break_point("mobile") {
        font-size: if($responsive, $size * 0.8, null);
        line-height: if($responsive, 1.7, null);
      }
    }
  }
  @content;
}
// animation
@mixin KeyF($name) {
  @keyframes #{$name} {
    @content;
  }
}
// features section over lay
@mixin features-overlay($color, $class) {
  &#{$class} .image::before {
    background-color: rgba($color, 60%);
  }
  &#{$class} h2::after {
    background-color: $color;
  }
  &#{$class} a {
    color: $color;
    border-color: $color;
    &::after {
      background-color: $color;
    }
  }
}
